@model events_groupe4.Models.Utilisateur

@{
    //Si une page .cshtml ne précise pas le layout, il prend le layout défini dans _ViewStart.cshtml => _Layout.cshtml
    
    //On peut spécifier notre propre layout
    //Layout = "~/Views/Shared/LayoutXXX.cshtml";
}

@using (Html.BeginForm("Login", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>IDENTIFICATION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Se connecter" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<p class="text-danger">@ViewBag.Msg</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
